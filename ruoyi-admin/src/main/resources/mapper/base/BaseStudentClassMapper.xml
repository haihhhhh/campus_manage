<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.base.mapper.BaseStudentClassMapper">
    
    <resultMap type="BaseStudentClass" id="BaseStudentClassResult">
        <result property="id"    column="id"    />
        <result property="classCode"    column="class_code"    />
        <result property="className"    column="class_name"    />
        <result property="gradeCode"    column="grade_code"    />
    </resultMap>

    <sql id="selectBaseStudentClassVo">
        select id, class_code, class_name, grade_code from base_student_class
    </sql>

    <select id="selectBaseStudentClassList" parameterType="BaseStudentClass" resultMap="BaseStudentClassResult">
        <include refid="selectBaseStudentClassVo"/>
        <where>  
            <if test="classCode != null  and classCode != ''"> and class_code = #{classCode}</if>
            <if test="className != null  and className != ''"> and class_name like concat('%', #{className}, '%')</if>
            <if test="gradeCode != null  and gradeCode != ''"> and grade_code = #{gradeCode}</if>
        </where>
    </select>
    
    <select id="selectBaseStudentClassById" parameterType="Long" resultMap="BaseStudentClassResult">
        <include refid="selectBaseStudentClassVo"/>
        where id = #{id}
    </select>

    <insert id="insertBaseStudentClass" parameterType="BaseStudentClass" useGeneratedKeys="true" keyProperty="id">
        insert into base_student_class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classCode != null">class_code,</if>
            <if test="className != null">class_name,</if>
            <if test="gradeCode != null">grade_code,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classCode != null">#{classCode},</if>
            <if test="className != null">#{className},</if>
            <if test="gradeCode != null">#{gradeCode},</if>
         </trim>
    </insert>

    <update id="updateBaseStudentClass" parameterType="BaseStudentClass">
        update base_student_class
        <trim prefix="SET" suffixOverrides=",">
            <if test="classCode != null">class_code = #{classCode},</if>
            <if test="className != null">class_name = #{className},</if>
            <if test="gradeCode != null">grade_code = #{gradeCode},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBaseStudentClassById" parameterType="Long">
        delete from base_student_class where id = #{id}
    </delete>

    <delete id="deleteBaseStudentClassByIds" parameterType="String">
        delete from base_student_class where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>